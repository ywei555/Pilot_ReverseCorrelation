library(tictoc)
library(pracma)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
# get base image
bi= readPNG('../code/base_image/base_female.png')
grid::grid.raster(bi)
graphics.off()
# get base image
bi= readPNG('../code/base_image/base_female.png')
grid::grid.raster(bi)
graphics.off()
# generate stimulus
#tic()
generateStimuli2IFC(list(base ="../code/base_image/base_female.png"), n_trials = 100, img_size = 224, noise_type = 'sinusoid', maximize_baseimage_contrast = T)
library(rstudioapi)
library(rcicr)
library(png)
library(tictoc)
library(pracma)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
# get base image
bi= readPNG('../code/base_image/base_female.png')
grid::grid.raster(bi)
graphics.off()
# generate stimulus
#tic()
generateStimuli2IFC(list(base ="../code/base_image/base_female.png"), n_trials = 100, img_size = 224, noise_type = 'sinusoid', maximize_baseimage_contrast = T)
library(rstudioapi)
library(rcicr)
library(png)
library(tictoc)
library(pracma)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
# get base image
bi= readPNG('../code/base_image/base_female.png')
grid::grid.raster(bi)
graphics.off()
# generate stimulus
#tic()
generateStimuli2IFC(list(base ="../code/base_image/base_female.png"), n_trials = 100, img_size = 224, noise_type = 'sinusoid', maximize_baseimage_contrast = T)
getws()
getwd()
library(png)
library(rstudioapi)
library(rcicr)
library(png)
library(tictoc)
library(pracma)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
# get base image
bi= readPNG('../code/base_image/base_female.png')
grid::grid.raster(bi)
graphics.off()
# generate stimulus
#tic()
generateStimuli2IFC(list(base ="../code/base_image/base_female.png"), n_trials = 100, img_size = 224, noise_type = 'sinusoid', maximize_baseimage_contrast = T)
getwd()
# generate stimulus
#tic()
generateStimuli2IFC(list(base ="../code/base_image/base_female.png"), n_trials = 100, img_size = 224, noise_type = 'sinusoid', maximize_baseimage_contrast = T)
generateStimuli2IFC
# generate stimulus
#tic()
generateStimuli2IFC(list(base ="../code/base_image/base_female.png"), n_trials = 100, img_size = 224, noise_type = 'sinusoid', maximize_baseimage_contrast = T, ncores = 1)
,=
?generateStimuli2IFC
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# get base image
bi= readPNG('../code/base_image/base_female.png')
grid::grid.raster(bi)
graphics.off()
bi
# generate stimulus
#tic()
generateStimuli2IFC(list(base ="../code/base_image/base_female.png"), n_trials = 100, img_size = 224, noise_type = 'sinusoid', maximize_baseimage_contrast = T, stimulus_path = "")
library(rstudioapi)
library(rcicr)
library(png)
library(tictoc)
library(pracma)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
# get base image
bi= readPNG('../code/base_image/base.png')
grid::grid.raster(bi)
graphics.off()
# generate stimulus
#tic()
generateStimuli2IFC(list(base ="../code/base_image/base.png"), n_trials = 100, img_size = 224, noise_type = 'sinusoid', maximize_baseimage_contrast = T, stimulus_path = "")
library(rstudioapi)
library(rcicr)
library(png)
library(tictoc)
library(pracma)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
# get base image
bi= readPNG('../code/base_image/base_female.png')
grid::grid.raster(bi)
graphics.off()
# generate stimulus
#tic()
generateStimuli2IFC(list(base ="../code/base_image/base_female.png"), n_trials = 100, img_size = 224, noise_type = 'sinusoid', maximize_baseimage_contrast = T, stimulus_path = "")
library(rstudioapi)
library(rcicr)
library(png)
library(tictoc)
library(pracma)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
# get base image
bi= readPNG('../code/base_image/base_female.png')
grid::grid.raster(bi)
graphics.off()
# generate stimulus
#tic()
generateStimuli2IFC(list(base ="../code/base_image/base_female.png"), n_trials = 10, img_size = 960, noise_type = 'sinusoid', maximize_baseimage_contrast = T, stimulus_path = "")
?generateStimuli2IFC
library(rstudioapi)
library(rcicr)
library(png)
library(tictoc)
library(pracma)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
# get base image
bi= readPNG('../code/base_image/base_female.png')
grid::grid.raster(bi)
graphics.off()
# generate stimulus
#tic()
generateStimuli2IFC(list(base ="../code/base_image/base_female.png"), n_trials = 10, img_size = 320, noise_type = 'sinusoid', maximize_baseimage_contrast = T, stimulus_path = "../code/stimuli/female/")
# generate path of stimulus images
fprintf("", file = 'a.txt', append = F)
library(rstudioapi)
library(rcicr)
library(png)
library(tictoc)
library(pracma)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
# get base image
bi= readPNG('../code/base_image/base_female.png')
grid::grid.raster(bi)
graphics.off()
# generate stimulus
#tic()
generateStimuli2IFC(list(base ="../code/base_image/base_female.png"), n_trials = 100, img_size = 320, noise_type = 'sinusoid', maximize_baseimage_contrast = T, stimulus_path = "../code/stimuli/female/")
# generate path of stimulus images
fprintf("", file = 'a.txt', append = F)
library(rstudioapi)
library(rcicr)
library(png)
library(tictoc)
library(pracma)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
# get base image
bi= readPNG('../code/base_image/base_male.png')
grid::grid.raster(bi)
graphics.off()
# generate stimulus
#tic()
generateStimuli2IFC(list(base ="../code/base_image/base_male.png"), n_trials = 100, img_size = 320, noise_type = 'sinusoid', maximize_baseimage_contrast = T, stimulus_path = "../code/stimuli/male/")
library(rstudioapi)
library(rcicr)
library(png)
library(tictoc)
library(pracma)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
# get base image
bi= readPNG('../code/base_image/base_male.png')
grid::grid.raster(bi)
graphics.off()
# generate stimulus
#tic()
generateStimuli2IFC(list(base ="../code/base_image/base_male.png"), n_trials = 100, img_size = 320, noise_type = 'sinusoid', maximize_baseimage_contrast = T, stimulus_path = "../code/stimuli/female/")
# generate path of stimulus images
# generate path of stimulus images
# fprintf("", file = 'a.txt', append = F)
# generate path of stimulus images
# fprintf("", file = 'a.txt', append = F)
# n0 <- function(i, n = 5){
# generate path of stimulus images
# fprintf("", file = 'a.txt', append = F)
# n0 <- function(i, n = 5){
#    ni = ceil(log(i+1)/log(10))
library(rstudioapi)
library(rcicr)
library(png)
library(tictoc)
library(pracma)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
# get base image
bi= readPNG('../code/base_image/base_female.png')
grid::grid.raster(bi)
graphics.off()
# generate stimulus
#tic()
generateStimuli2IFC(list(base ="../code/base_image/base_female.png"), n_trials = 100, img_size = 320, noise_type = 'sinusoid', maximize_baseimage_contrast = T, stimulus_path = "../code/stimuli/male/")
View(data_dw)
View(data_dw)
data_aly = read.csv("./exp_data_0315/FinishPilot_RC_Aly_20220314T054142PM.csv")
dim(data_aly)
?matatu
?setdiff
?myData
?myData
?myData[]
?mydata
data_aly
data_aly[-c(1,2,3),]
data_aly
View(data_aly)
View(data_aly)
View(data_aly)
data_aly[-c(1),]
View(data_aly)
View(data_aly)
data_aly[-c(1),]
View(data_aly)
View(data_aly)
data_aly = data_aly[-c(1,2,3,4,10),]
data_aly = data_aly[-c(1,2,3,4,10,106),]
data_aly = read.csv("./exp_data_0315/FinishPilot_RC_Aly_20220314T054142PM.csv")
data_aly = data_aly[-c(1,2,3,4,10,106),]
View(data_aly)
View(data_aly)
# Path to rdata-file holding all stimulus parameters, cre- ated when generating stimuli
rdata <- "./stimuli/female/rcic_seed_1_time_Mar_14_2022_15_36.Rdata"
load(rdata)
c_aly = (data_aly$response == "j") - (data_aly$response == "f")
library(rcicr)
library(pracma)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(stringr)
library(pracma)
c_dw = (data_dw$response == "j") - (data_dw$response == "f")
View(data_dw)
View(data_dw)
c_dw = (data_dw$response == "j") - (data_dw$response == "f")
str_split(data_dw$firstImage,'_')
(function(x)str2num(x[4]),str_split(data_dw$firstImage,'_'))
function(x)str2num(x[4])
arrayfun(function(x)str2num(x[4]),str_split(data_dw$firstImage,'_'))
od_dw
od_aly = [1:100]
[1:100]
1:100
od_aly = c(1,[1:100])
od_aly = c[1,1:100]
od_aly = c(1,1:100)
od_aly
data_aly = read.csv("./exp_data_0315/FinishPilot_RC_Aly_20220314T054142PM.csv")
data_aly = data_aly[-c(1,2,3,4,10,106),]
# Path to rdata-file holding all stimulus parameters, cre- ated when generating stimuli
rdata <- "./stimuli/female/rcic_seed_1_time_Mar_14_2022_15_36.Rdata"
load(rdata)
c_aly = (data_aly$response == "j") - (data_aly$response == "f")
od_aly = c(1,1:100)
ci_aly <- generateCI(od_aly, c_aly, "base", rdata)
dim(c_aly)
od_aly
od_aly = c(1:100)
od_aly
od_aly = c(1:100)
ci_aly <- generateCI(od_aly, c_aly, "base", rdata)
#ci2_dw <- generateCI(od_dw, -c_dw, "base", rdata)
# ci2_sw <- generateCI(od_sw, -c_sw, "base", rdata)
# ci2_yw <- generateCI(od_yw, -c_yw, "base", rdata)
# ci2_w <- generateCI(c(od_dw, od_sw, od_yw), -c(c_dw, c_sw, c_yw), "base", rdata)
library(fields)
library(OpenImageR)
image(flipImage(t(ci_aly$combined)), col = gray.colors(10, start = 0.3, end = 0.9, gamma = 2.2, alpha = NULL))
image_aly = image(flipImage(t(ci_aly$combined)), col = gray.colors(10, start = 0.3, end = 0.9, gamma = 2.2, alpha = NULL))
image_aly
?image
?flipImage
?image()
?image()
a = flipImage(t(ci_aly$combined)), col = gray.colors(10, start = 0.3, end = 0.9, gamma = 2.2, alpha = NULL)
a = flipImage(t(ci_aly$combined))
image(a)
a = flipImage(t(ci_aly$combined))
a
yimage <- function(x){
image(x, col = gray.colors(10, start = 0.3, end = 0.9, gamma = 2.2, alpha = NULL))
}
yimage(a)
source("laopo.R")
laopo
laopo()
ci_aly
library(rcicr)
library(pracma)
library(fields)
library(OpenImageR)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
#load data
data_aly = read.csv("./exp_data_0315/FinishPilot_RC_Aly_20220314T054142PM.csv")
data_aly = data_aly[-c(1,2,3,4,10,106),]
# Path to rdata-file holding all stimulus parameters, cre- ated when generating stimuli
rdata_female <- "./stimuli/female/rcic_seed_1_time_Mar_14_2022_15_36.Rdata"
load(rdata)
#load choice
c_aly = (data_aly$response == "j") - (data_aly$response == "f")
od_aly = c(1:100)
#load image
ci_aly <- generateCI(od_aly, c_aly, "base", rdata_female)
aly = flipImage(t(ci_aly$combined))
yimage <- function(x){
image(x, col = gray.colors(10, start = 0.3, end = 0.9, gamma = 2.2, alpha = NULL))
}
yimage(aly)
yimage(al)
yimage(aly)
source("WangImport.R")
W_laod(dir)
W_load(dir)
dir = "./exp_data_0315/"
W_load(dir)
library(tidyverse)
tbl <-
list.files(pattern = "*.csv") %>%
map_df(~read_csv(.))
View(tbl)
library(plyr)
library(readr)
library(plyr)
library(readr)
mydir = "./exp_data_0315/"
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
myfiles
dat_csv = ldply(myfiles, read_csv)
dat_csv
read_csv(myfiles[1])
data_2 = read.csv(myfiles[1])
View(data_2)
View(data_2)
ydata<- function(x){
read.csv(myfiles[x])
}
data_3 = ydata(3)
ydata<- function(x){
data_x = read.csv(myfiles[x])
data_x = data_x[-c(1,2,3,4,10,106),]
}
data_3 = ydata(3)
data_4 = ydata(4)
View(data_3)
View(data_3)
View(data_4)
View(data_4)
data_1 = ydata(1)
library(rcicr)
library(pracma)
library(fields)
library(OpenImageR)
library(plyr)
library(readr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
mydir = "./exp_data_0315/"
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
myfiles
# #import all files to a new dataset
# dat_csv = ldply(myfiles, read_csv)
# dat_csv
ydata<- function(x){
data_x = read.csv(myfiles[x])
data_x = data_x[-c(1,2,3,4,10,106),]
}
data_1 = ydata(1)
# Path to rdata-file holding all stimulus parameters, cre- ated when generating stimuli
rdata_female <- "./stimuli/female/rcic_seed_1_time_Mar_14_2022_15_36.Rdata"
load(rdata_female)
#load choice
c_1 = (data_1$response == "j") - (data_aly$response == "f")
#load choice
c_1 = (data_1$response == "j") - (data_1$response == "f")
od_1 = c(1:100)
#load image
ci_1 <- generateCI(od_1, c_1, "base", rdata_female)
1 = flipImage(t(ci_aly$combined))
yimage <- function(x){
image(x, col = gray.colors(10, start = 0.3, end = 0.9, gamma = 2.2, alpha = NULL))
}
yimage(1)
yimage(1)
yimage(1)
1 = flipImage(t(ci_aly$combined))
yimage(pilot_1)
#clean environment
rm(list= ls())
library(rcicr)
library(pracma)
library(fields)
library(OpenImageR)
library(plyr)
library(readr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
mydir = "./exp_data_0315/"
library(rcicr)
library(pracma)
library(fields)
library(rcicr)
library(pracma)
library(fields)
library(OpenImageR)
library(plyr)
library(readr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#clean environment
rm(list= ls())
mydir = "./exp_data_0315/"
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
myfiles
# #import all files to a new dataset
# dat_csv = ldply(myfiles, read_csv)
# dat_csv
ydata<- function(x){
data_x = read.csv(myfiles[x])
data_x = data_x[-c(1,2,3,4,10,106),]
}
data_1 = ydata(1)
# Path to rdata-file holding all stimulus parameters, cre- ated when generating stimuli
rdata_female <- "./stimuli/female/rcic_seed_1_time_Mar_14_2022_15_36.Rdata"
load(rdata_female)
#load choice
c_1 = (data_1$response == "j") - (data_1$response == "f")
od_1 = c(1:100)
#load image
ci_1 <- generateCI(od_1, c_1, "base", rdata_female)
pilot_1 = flipImage(t(ci_aly$combined))
yimage <- function(x){
image(x, col = gray.colors(10, start = 0.3, end = 0.9, gamma = 2.2, alpha = NULL))
}
yimage(pilot_1)
(pilot_1)
pilot_1 = flipImage(t(ci_aly$combined))
pilot_1 = flipImage(t(ci_1$combined))
yimage <- function(x){
image(x, col = gray.colors(10, start = 0.3, end = 0.9, gamma = 2.2, alpha = NULL))
}
yimage(pilot_1)
?save.image
#load image
ci_1 <- generateCI(od_1, c_1, "1", rdata_female)
#load image
ci_1 <- generateCI(od_1, c_1, "abc", rdata_female)
#load image
ci_1 <- generateCI(od_1, c_1, "abase", rdata_female)
#load image
ci_1 <- generateCI(od_1, c_1, "base", rdata_female)
?generateCI
#load image
ci_1 <- generateCI(od_1, c_1, "base", rdata_female,save_as_png = TRUE, filename = "ci_1", targetpath = "./cis/")
#load image
ci_1 <- generateCI(od_1, c_1, "base", rdata_female,save_as_png = TRUE, filename = "1", targetpath = "./cis/")
dim(data_1)
dim(data_1)[1]
#load image
ci_1 <- generateCI(od_1, c_1, rdata_female,save_as_png = TRUE, filename = "1", targetpath = "./cis/")
data_2 = ydata(2)
#load choice
ychoice<- function(x){
c_x = (data_x$response == "j") - (data_x$response == "f")
}
#load choice
ychoice<- function(x){
c_x = (data_x$response == "j") - (data_x$response == "f")
}
c_2 = ychoice(2)
myfiles
a_1 = 1
a_2 = 3
a_x
x = 1
a_x
source("Wimport.R")
mydir = "./exp_data_0315/"
d = W_csv(mydir)
source("Wimport.R")
mydir = "./exp_data_0315/"
d = W_csv(mydir)
source("Wimport.R")
mydir = "./exp_data_0315/"
d = W_csv(mydir)
d
